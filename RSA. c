#include <stdio.h>
#include <stdlib.h>

// Function to calculate gcd of a and b
int gcd(int a, int b) {
    if (b == 0)
        return a;
    return gcd(b, a % b);
}

// Function to calculate modular multiplicative inverse of a under modulo m
int modInverse(int a, int m) {
    int m0 = m;
    int y = 0, x = 1;

    if (m == 1)
        return 0;

    while (a > 1) {
        int q = a / m;
        int t = m;

        m = a % m, a = t;
        t = y;

        y = x - q * y;
        x = t;
    }

    if (x < 0)
        x += m0;

    return x;
}

// Function to generate key pair
void generateKeyPair(int p, int q) {
    int n = p * q;

    int phi = (p - 1) * (q - 1);

    int e = 2 + (rand() % (phi - 4));

    // Calculate gcd of e and phi
    while (gcd(e, phi) != 1)
        e++;

    int d = modInverse(e, phi);

    printf("Public Key (e, n): (%d, %d)\n", e, n);
    printf("Private Key (d, n): (%d, %d)\n", d, n);
}

int main() {
    int p, q;

    printf("Enter two prime numbers: ");
    scanf("%d %d", &p, &q);

    generateKeyPair(p, q);

    return 0;
}

Output:
Enter two prime numbers: 7
11
Public Key (e, n): (43, 77)
Private Key (d, n): (7, 77)
